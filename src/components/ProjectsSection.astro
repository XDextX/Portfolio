---
import ProjectCard from './ProjectCard.astro';
import type { GitHubRepo } from '../types/github';
const topic = import.meta.env.GITHUB_TOPIC;

export interface Props {
	repos: GitHubRepo[];
	title?: string;
}

const { repos, title = 'Proyectos' } = Astro.props;
const titleId = 'projects-title';
const columns = repos.length > 5 ? 5 : repos.length;
---

<section class='section' aria-labelledby={titleId} id='Projects'>
	<h2 class='section__title' id={titleId}>{title}</h2>

	{
		repos.length === 0 ? (
			<p class='empty'>
				No hay proyectos para mostrar. Agrega el topic
				<code class='code'>{topic}</code> a tus repos en GitHub.
			</p>
		) : (
			<div class='grid' style={`--cols:${columns}`}>
				{repos.map((r) => (
					<ProjectCard repo={r} />
				))}
			</div>
		)
	}

	<style>
		.code {
			color: var(--accent-color);
		}
		.wrap > h2 {
			color: var(--accent-color);
			margin: 0.25rem 0 1rem 0;
			font-size: 1.2rem;
		}
		.grid {
			display: grid;
			gap: 1rem;
			grid-template-columns: repeat(var(--cols, 5), minmax(0, 1fr));
		}
		@media (max-width: 1200px) {
			.grid {
				grid-template-columns: repeat(4, 1fr);
			}
		}
		@media (max-width: 980px) {
			.grid {
				grid-template-columns: repeat(3, 1fr);
			}
		}
		@media (max-width: 720px) {
			.grid {
				grid-template-columns: repeat(2, 1fr);
			}
		}
		@media (max-width: 390px) {
			.grid {
				grid-template-columns: 1fr;
			}
		}
		.empty {
			color: var(--text-color);
		}
	</style>
</section>
