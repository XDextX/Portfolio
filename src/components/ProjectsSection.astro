---
import ProjectCard from './ProjectCard.astro';
import type { GitHubRepo } from '../types/github';
import { t } from '@i18n/index';
const topic = import.meta.env.GITHUB_TOPIC;
const topicValue =
	topic && topic.trim().length > 0 ? topic : t('projects.topicLabel');

export interface Props {
	repos: GitHubRepo[];
	title?: string;
	hideTitle?: boolean;
	locale?: 'es' | 'en';
}

const {
	repos,
	title = t('projects.title'),
	hideTitle = false,
	locale = 'es',
} = Astro.props as Props;
const headingId = 'projects-title';
const labelledAttrs = hideTitle
	? { 'aria-label': title }
	: { 'aria-labelledby': headingId };
const columns = repos.length > 5 ? 5 : repos.length;
---

<section
	class='section'
	id='Projects'
	{...labelledAttrs}
	transition:name={`p-${headingId}`}
>
	{
		!hideTitle && (
			<h2
				class='section__title'
				id={headingId}
				transition:name={`p-${headingId}-title`}
			>
				<a class='accent-color ' href='/proyectos'>
					{title}
				</a>
			</h2>
		)
	}

	{
		repos.length === 0 ? (
			<p class='empty'>{t('projects.empty.message', { topic: topicValue })}</p>
		) : (
			<div class='grid' style={`--cols:${columns}`}>
				{repos.map((r) => (
					<ProjectCard repo={r} locale={locale} />
				))}
			</div>
		)
	}

	<style>
		.code {
			color: var(--accent-color);
		}
		.wrap > h2 {
			color: var(--accent-color);
			margin: 0.25rem 0 1rem 0;
			font-size: 1.2rem;
		}
		.grid {
			display: grid;
			gap: 1rem;
			grid-template-columns: repeat(var(--cols, 5), minmax(0, 1fr));
		}
		@media (max-width: 1200px) {
			.grid {
				grid-template-columns: repeat(4, 1fr);
			}
		}
		@media (max-width: 980px) {
			.grid {
				grid-template-columns: repeat(3, 1fr);
			}
		}
		@media (max-width: 720px) {
			.grid {
				grid-template-columns: repeat(2, 1fr);
			}
		}
		@media (max-width: 390px) {
			.grid {
				grid-template-columns: 1fr;
			}
		}
		.empty {
			color: var(--text-color);
		}
	</style>
</section>
