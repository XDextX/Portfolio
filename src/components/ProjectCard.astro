---
import Chip from './Chip.astro';
import LanguageBadge from './LanguageBadge.astro';
import type { GitHubRepo } from '../types/github';

export interface Props {
	repo: GitHubRepo;
}
const { repo } = Astro.props;

const desc = repo.description ?? 'Sin descripci√≥n';
const lang = repo.language ?? 'N/A';
const updated = new Date(repo.updated_at).toLocaleDateString();
const hasDemo = !!repo.homepage && repo.homepage.trim() !== '';
const demo = hasDemo ? repo.homepage! : '#';

function k(n: number): string {
	return n < 1000 ? String(n) : (n / 1000).toFixed(1) + 'k';
}
---

<article class='card' aria-labelledby={`p-${repo.id}-title`}>
	<h3 id={`p-${repo.id}-title`} class='title'>{repo.name}</h3>

	<p class='desc'>{desc}</p>
	<p class='stack'>
		<strong>Stack:</strong>
		<LanguageBadge lang={lang} />
	</p>

	<ul class='meta' aria-label='M√©tricas'>
		<li title='Stars'>‚≠ê {k(repo.stargazers_count)}</li>
		<li title='Forks'>üç¥ {k(repo.forks_count)}</li>
	</ul>

	{
		repo.topics?.length ? (
			<div class='topics'>
				{repo.topics.slice(0, 6).map((t) => (
					<Chip text={t} />
				))}
			</div>
		) : null
	}

	<p class='date'>Actualizado: {updated}</p>

	<nav class='actions' aria-label='Acciones'>
		{
			hasDemo ? (
				<a class='btn' href={demo} target='_blank' rel='noopener'>
					Live Demo
				</a>
			) : (
				<span class='btn disabled' aria-disabled='true'>
					Sin demo
				</span>
			)
		}
		<a class='btn' href={repo.html_url} target='_blank' rel='noopener'>C√≥digo</a>
		<a class='btn ghost' href={`/proyectos/${repo.name}`}>Detalle</a>
	</nav>
</article>

<style>
	.card {
		background: #2d3244;
		border: 1px solid #3a4056;
		border-radius: 12px;
		padding: 1rem 1.1rem;
		display: flex;
		flex-direction: column;
		gap: 0.45rem;
		box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
	}
	.title {
		color: #7de089;
		margin: 0 0 0.2rem 0;
		font-weight: 800;
	}
	.desc {
		color: #e6eaf3;
		margin: 0;
		min-height: 3.2em;
	}
	.stack {
		color: #cfd6e6;
		margin: 0.15rem 0 0.2rem 0;
	}
	.meta {
		display: flex;
		gap: 1rem;
		list-style: none;
		padding: 0;
		margin: 0.1rem 0;
		color: #cfd6e6;
	}
	.topics {
		display: flex;
		flex-wrap: wrap;
		gap: 0.35rem;
		margin-top: 0.2rem;
	}
	.date {
		color: #a9b4cc;
		font-size: 0.9rem;
		margin: 0.2rem 0 0.5rem 0;
	}
	.actions {
		margin-top: auto;
		display: flex;
		gap: 0.6rem;
		flex-wrap: wrap;
	}
	.btn {
		display: inline-block;
		font-weight: 700;
		color: #79e28a;
		text-decoration: none;
		border: 1px solid #3a4056;
		background: #273043;
		padding: 0.4rem 0.75rem;
		border-radius: 8px;
		transition: 0.15s ease;
	}
	.btn:hover {
		transform: translateY(-1px);
		box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
		border-color: #49506a;
	}
	.btn.disabled {
		color: #9aa6bf;
		pointer-events: none;
		background: #272d3f;
	}
	.btn.ghost {
		background: transparent;
		color: #b9c3d9;
	}
</style>
