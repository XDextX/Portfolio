---
import Chip from './Chip.astro';
import LanguageBadge from './LanguageBadge.astro';
import type { GitHubRepo } from '../types/github';

export interface Props {
	repo: GitHubRepo;
}
const { repo } = Astro.props;

const desc = repo.description ?? 'Sin descripci√≥n';
const lang = repo.language ?? 'N/A';
const updated = new Date(repo.updated_at).toLocaleDateString();
const hasDemo = !!repo.homepage && repo.homepage.trim() !== '';
const demo = hasDemo ? repo.homepage! : '#';

function k(n: number): string {
	return n < 1000 ? String(n) : (n / 1000).toFixed(1) + 'k';
}
---

<article class='card grid primary-bg' aria-labelledby={`p-${repo.id}-title`}>
	<header class='flex justify-between items-center mb-4'>
		<h3 id={`p-${repo.id}-title`} class='text-xl accent-color'>
			{repo.name}
		</h3>
		{
			hasDemo ? (
				<a class='btn ghost' href={demo} target='_blank' rel='noopener'>
					Live Demo
				</a>
			) : null
		}
	</header>

	<p class='mb-4'>{desc}</p>
	<p class='stack'>
		<strong>Stack:</strong>
		<LanguageBadge lang={lang} />
	</p>

	<ul class='flex' aria-label='M√©tricas'>
		<li title='Stars'>‚≠ê {k(repo.stargazers_count)}</li>
		<li title='Forks'>üç¥ {k(repo.forks_count)}</li>
	</ul>

	{
		repo.topics?.length ? (
			<div class='topics'>
				{repo.topics.slice(0, 6).map((t) => (
					<Chip text={t} />
				))}
			</div>
		) : null
	}

	<p class='date'>Actualizado: {updated}</p>

	<nav class='flex gap-2 wrap' aria-label='Acciones'>
		<a class='btn primary' href={repo.html_url} target='_blank' rel='noopener'
			>C√≥digo</a
		>
		<a class='btn' href={`/proyectos/${repo.name}`}>Detalle</a>
	</nav>
</article>
